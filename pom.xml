<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.zy</groupId>
    <artifactId>dubbo_retry</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>dubbo_retry</name>
    <packaging>pom</packaging>
    <description>Demo project for Spring Boot</description>

    <properties>


        <java.version>1.8</java.version>
        <!--老师的a.xml文件拷贝过来的，父工程托管jar包版本托管-->
        <dubbo.starter.version>2.0.0</dubbo.starter.version>
        <zkclient.version>0.10</zkclient.version>
        <mysql.version>5.1.24</mysql.version>
        <jackson.version>2.5.3</jackson.version>
        <shiro.version>1.4.0</shiro.version>
        <thymeleaf-shiro.version>1.2.1</thymeleaf-shiro.version>
        <nekohtml.version>1.9.22</nekohtml.version>
        <spring.version>1.5.18.RELEASE</spring.version>
        <thymeleaf.version>1.5.8.RELEASE</thymeleaf.version>
        <thymeleaf-layout.version>2.1.2</thymeleaf-layout.version>
        <blog-api.version>0.0.1-SNAPSHOT</blog-api.version>
        <fastjson.version>1.2.54</fastjson.version>

    </properties>
    <dependencyManagement>
        <dependencies>
            <!--这个是为了防止前台界面爆sax解析错误而存在的-->
            <dependency>
                <groupId>net.sourceforge.nekohtml</groupId>
                <artifactId>nekohtml</artifactId>
                <version>${nekohtml.version}</version>
            </dependency>
            <!--建立项目自带的包-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!--建立项目，用来测试的包-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <version>${spring.version}</version>
            </dependency>
            <!--手动依赖子项目-->
            <dependency>
                <groupId>com.zy</groupId>
                <artifactId>commons</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <!--thymeleaf的方言，针对啥都？-->
<!--            <dependency>
                <groupId>nz.net.ultraq.thymeleaf</groupId>
                <artifactId>thymeleaf-layout-dialect</artifactId>
                <version>${thymeleaf-layout.version}</version>
            </dependency>-->

            <!--先导入SpringbootJPA的包，这个包包含了manytomany，entity，table，transaction等注解，dan
            不包含jsonIgnore，也就是说负责dao层的包-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!--对APImodule的实体类进行依赖-->
            <dependency>
                <groupId>com.zy</groupId>
                <artifactId>api</artifactId>
                <version>${blog-api.version}</version>
            </dependency>
            <!--邮件模板的依赖，provider需要依赖它-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-mail</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!--里面的thymeleafEngine需要被依赖，除了api其他子项目都需要应用-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${thymeleaf.version}</version>
            </dependency>
            <!--这个是jsonignore注解所在的包，但是在我翻包2.5.3的时候，
                   找不到那个jsonignore那个类，这个类在2.8.0里面，但是如果没2.5.3
                   却会2.8.0不生效，这个是api的需要的jar-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!--数据库连接包，provider需要的-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!--导入Shiro赋权所需jar包 用老师的会出问题，因为字符编码不统一会报错-->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-ehcache</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <!--shiro和thymeleaf的整合包-->
            <dependency>
                <!--整合包2起-->
                <groupId>com.github.theborakompanioni</groupId>
                <artifactId>thymeleaf-extras-shiro</artifactId>
                <version>${thymeleaf-shiro.version}</version>
            </dependency>
            <!--dubbo和zoomkeeper的jar包，版本由当爹的控制-->
            <dependency>
                <groupId>com.alibaba.spring.boot</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.starter.version}</version>
            </dependency>
            <!--防止多人登录的fastjosn的包-->
            <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <!--这个exclusions是为了自己导入slf4j等各种包，所以要忽略zookeeper自带的包-->
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>

                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-api</artifactId>
                    </exclusion>

                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
                <version>${zkclient.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!--将开发的jdk弄成1.8需要再apache.maven的settings文件里插入以下的profile节点-->
<!--    <profile>
        <id>jdk-1.8</id>
        <activation>
            <activeByDefault>true</activeByDefault>
            <jdk>1.8</jdk>
        </activation>
        <properties>
            <maven.compiler.source>1.8</maven.compiler.source>
            <maven.compiler.target>1.8</maven.compiler.target>
            <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
        </properties>
    </profile>-->
    <!--<build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>-->
    <!--在pom中添加一个SpringBoot的构建的插件，然后重新运行 mvn install即可-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.5.4.RELEASE</version>
            </plugin>
        </plugins>
    </build>
</project>
